version: '3.7'

x-env: &env production
x-decidim: &decidim 0.23.0
x-ruby: &ruby 
  RUBY_VERSION: 2.6.6
x-pg-env: &pg-env
  POSTGRES_USER: &pg-user postgres
  POSTGRES_PASSWORD:
  POSTGRES_DB: &pg-db azione-decidim_production
  POSTGRES_HOST_AUTH_METHOD: trust

x-admin: &admin
  ADMIN_EMAIL: &admin_email patrick.jusic@uspace.it
  ADMIN_PASSWORD: azione_decidim
x-org: &org
  ORG_NAME: &org_name PartecipAzione
  ORG_HOST: &org_host partecip.azione.it
  ORG_ADMIN: &org_admin patrickjusic96@gmail.com

x-smtp: &smtp
  SMTP_HOST: &smtp_host in-v3.mailjet.com 
  SMTP_PORT: 25
  SMTP_DOMAIN: uspace.it
  SMTP_ADDRESS: *smtp_host
  SMTP_USERNAME: 657288d8a677f13ab927ac92562fb967
  SMTP_PASSWORD: 2f8bfff90441f4123af9eed6c3587f33

x-network: &network
  networks:
    decidim:

services:
  decidim:
    container_name: decidim
    hostname: decidim-host
    image: *pg-db
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - decidim-gems:/usr/local/bundle:delegated
      - decidim-config:/home/decidim/azione-decidim/config
      - decidim-uploads:/home/decidim/azione-decidim/public/uploads
    environment:
      PORT: 3000
      DATABASE_HOST: pg
      DATABASE_USERNAME: *pg-user
      DATABASE_NAME: *pg-db
      RAILS_ENV: *env
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgres://postgres@pg:5432/azione-decidim_production
      RAILS_SERVE_STATIC_FILES: "true"
      SECRETKEY: secret
      SECRET_KEY_BASE: secret
      DECIDIM_VERSION: *decidim
      # RAILS_LOG_TO_STDOUT: true
      <<: [*ruby, *admin, *org, *smtp]
    depends_on:
      - pg
      - redis
      - traefik
    links:
      - pg
      - redis
    <<: *network
    labels:
      - traefik.enable=true
      - traefik.http.routers.decidim.rule=Host(`partecipazione.azione.it`)
      - traefik.http.routers.decidim.tls=true
      - traefik.http.routers.decidim.tls.certresolver=le

  pg:
    image: postgres
    container_name: pg
    volumes:
      - pg:/var/lib/postgresql/data
    environment:
      <<: *pg-env
    <<: *network

  redis:
    container_name: redis_decidim
    image: redis
    volumes:
      - redis:/data
    <<: *network

  mailer:
    image: namshi/smtp
    container_name: mailer
    restart: always
    <<: *network
      
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana_lib:/var/lib/grafana
      - ./config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=base_decidim
    <<: *network
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.partecipazione.azione.it`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=le

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - prometheus_data:/prometheus
      - prometheus_config:/fragments/
      - ./config/prometheus/targets/prometheus.json:/etc/prometheus/targets/prometheus.json
      - ./config/prometheus/targets/grafana.json:/etc/prometheus/targets/grafana.json
      - ./config/prometheus/targets/traefik.json:/etc/prometheus/targets/traefik.json
    command:
      - "--config.file=/fragments/complete/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - config-concat
    <<: *network
    labels:
      - traefik.enable=true
      # - traefik.http.routers.prometheus.rule=Host(`prometheus.partecipa.baseitalia.net`)
      # - traefik.http.routers.prometheus.tls=true
      # - traefik.http.routers.prometheus.tls.certresolver=le

  config-concat:
    image: deanwilson/promconf-concat:0.1.0
    container_name: config-concat
    restart: always
    volumes:
      - prometheus_config:/fragments/
      - ./config/prometheus/base_prometheus.yml:/base_prometheus.yml
    <<: *network

  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=patrick.jusic@uspace.it"
      - "--certificatesResolvers.le.acme.storage=acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
      # Metrics
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.metrics.address=:8082"
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./acme.json:/acme.json
    labels:
      - traefik.enable=true
      # Redirect all HTTP to HTTPS permanently
      - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http_catchall.entrypoints=web
      - traefik.http.routers.http_catchall.middlewares=https_redirect
      - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
      # Traefik dashboard
      - traefik.http.routers.traefik.rule=Host(`traefik.partecipazione.azione.it`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=le
      - "traefik.http.middlewares.basic-auth.basicauth.users=admin:$$apr1$$jtkrgano$$SeKqInRVXEzuCp1MVM6y91"
      - traefik.http.routers.traefik.middlewares=basic-auth
    <<: *network

volumes:
  pg:
  redis:
  decidim-gems:
  decidim-config:
  decidim-uploads:
  grafana_lib:
  prometheus_data:
  prometheus_config:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  decidim:
